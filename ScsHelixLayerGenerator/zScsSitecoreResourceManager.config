<?xml version="1.0"?>
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
	<sitecore>
		<pipelines>
			<scsRegister>
				<processor type="ScsSitecoreResourceManager.ScsSitecoreResourceManagerRegistration, ScsSitecoreResourceManager" >
					<!-- leave blank for any role, seperate multiple roles by | character -->
					<param name="roles"></param>
					<!-- set to "true" to only allow admins-->
					<param name="isAdmin">false</param>
					<!-- leave blank for any users, seperate multiple users by | character -->
					<param name="users"></param>
				</processor>
			</scsRegister>
			<propertyProcessorPreCompiled>
			<!-- Processors here will execute before any compiled properties are gathered from the properties json, but after the user defined properties are added.
				Use it to add custom computed properties that the compiled properties rely on-->
			</propertyProcessorPreCompiled>
			<propertyProcessorPostCompiled>
				<!-- Processors here will execute after all properties from the properties.json are aggregated.
				Use it to add custom computed properties that rely on any other properties existing-->
				<processor type="ScsSitecoreResourceManager.Pipelines.PropertyProcessorPostGather.ExtrapolateFromTargetFiles, ScsSitecoreResourceManager" >
					<Layers>foundation,feature,project</Layers>
				</processor>
				<!-- Allows the use of compound layering in compiled or target properties, for example, you can use a compiled property in a compiled property that's used in a target property-->
				<processor type="ScsSitecoreResourceManager.Pipelines.PropertyProcessorPostGather.PropertyLayeredTokenReplacer, ScsSitecoreResourceManager"/>
			</propertyProcessorPostCompiled>
			<SitecoreResourceManager>
				<!--             OverlayTemplate Requires
					_OVERLAYTARGET_
				-->
				<processor type="ScsSitecoreResourceManager.Pipelines.SitecoreResourceManager.OverlayTemplate, ScsSitecoreResourceManager" />


				<!--             ReplaceAllTokens Requires
					Output from ScsSitecoreResourceManager.Pipelines.SitecoreResourceManager.OverlayTemplate
				-->
				<processor type="ScsSitecoreResourceManager.Pipelines.SitecoreResourceManager.ReplaceAllTokens, ScsSitecoreResourceManager" />


				<!--             ApplyProjectsToSolution Requires
					Output from ScsSitecoreResourceManager.Pipelines.SitecoreResourceManager.OverlayTemplate
					_PROJECTNAME_
					_SOLUTIONPATH_
				-->
				<processor type="ScsSitecoreResourceManager.Pipelines.SitecoreResourceManager.ApplyProjectsToSolution, ScsSitecoreResourceManager" />
				

				<!--             ApplyFilesToProject Requires
					Output from ScsSitecoreResourceManager.Pipelines.SitecoreResourceManager.OverlayTemplate
					_TARGETCONTROLLERPATH_
				-->
				<processor type="ScsSitecoreResourceManager.Pipelines.SitecoreResourceManager.ApplyFilesToProject, ScsSitecoreResourceManager" />


				<!--             AddToExistingController Requires
					_CONTROLLERACTION_
					_TARGETCONTROLLERPATH_
				-->
				<processor type="ScsSitecoreResourceManager.Pipelines.SitecoreResourceManager.AddToExistingController, ScsSitecoreResourceManager" />


				<!--             CreateTemplate Requires
					_TEMPLATEFOLDERTEMPLATEID_
					_TEMPLATEPATH_
					_BASETEMPLATEID_
					_SITECOREICON_
				-->
				<processor type="ScsSitecoreResourceManager.Pipelines.SitecoreResourceManager.CreateTemplate, ScsSitecoreResourceManager" />


				<!--             CreateRendering Requires
					_RENDERINGFOLDERTEMPLATEID_
					_RENDERPATH_
					_RENDERINGNAME_
					_RENDERINGTEMPLATEID_
					if controller rendering
						_CONTROLLERNAMESPACE_
						_ASSEMBLYNAME_
					if view rendering
						_VIEWPATH_
					_CONTROLLERACTION_
					_CACHEOPTIONS_
				-->
				<processor type="ScsSitecoreResourceManager.Pipelines.SitecoreResourceManager.CreateRendering, ScsSitecoreResourceManager" />
				

				<!--             ApplyToPlaceholderSettings Requires
					Output from ScsSitecoreResourceManager.Pipelines.SitecoreResourceManager.CreateRendering
					_PLACEHOLDERSETTINGS_
				-->
				<processor type="ScsSitecoreResourceManager.Pipelines.SitecoreResourceManager.ApplyToPlaceholderSettings, ScsSitecoreResourceManager" />
			</SitecoreResourceManager>
		</pipelines>
	</sitecore>
</configuration>
